apply plugin: 'java'
apply plugin: 'idea'

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'org.gradle.api.plugins:gradle-nexus-plugin:0.7'
    }
}

repositories {
    mavenCentral()
}

if (hasProperty('nexusUsername')) {
    apply from: 'gradle/publish.gradle'
}

apply from: 'gradle/jacoco.gradle'

defaultTasks 'build'

compileJava {
    sourceCompatibility = JavaVersion.VERSION_1_7
    targetCompatibility = JavaVersion.VERSION_1_7
}

configurations {
    jaxDoclet
    compile
    runtime
}

dependencies {
    // Logging
    compile     'org.slf4j:slf4j-api:1.7.+'

    // Configuration
    compile     group: 'com.typesafe', name: 'config', version: '1.2.+'

    // Http
    compile     'com.google.http-client:google-http-client:1.18.0-rc'
    compile     'com.google.oauth-client:google-oauth-client:1.18.0-rc'

    // Common utils
    compile     'commons-validator:commons-validator:+'
    compile     'org.apache.commons:commons-lang3:+'
    compile     'de.danielbechler:java-object-diff:0.13+'


    // Testing
    testCompile 'junit:junit:4.11+'
    testCompile 'org.mockito:mockito-core:1.9.5'
    testCompile 'com.google.http-client:google-http-client-jackson2:1.18.0-rc'

    // Test logging
    testCompile 'ch.qos.logback:logback-classic:1.+'
    testCompile 'org.slf4j:jul-to-slf4j:1.7.+'

    // Cache
    testCompile  'com.integralblue:httpresponsecache:1.3+'

    // Utils
    testCompile  'org.apache.commons:commons-io:1.3+'
    testCompile  'nl.jqno.equalsverifier:equalsverifier:1.4+'

    // JavaDoc
    jaxDoclet("com.google.doclava:doclava:1.+")
}

task generateDoclava(type: Javadoc) {

    description = "Build the Doclava Javadocs"
    source = sourceSets.main.allJava
    options.docletpath = configurations.jaxDoclet.files.asType(List)
    maxMemory = "1024m"
    classpath = configurations.compile
    destinationDir = file("${project.docsDir}/apidocs")
    title = ""

    options {
        doclet = "com.google.doclava.Doclava"
        bootClasspath new File(System.getenv('JAVA_HOME') + "/jre/lib/rt.jar")

        addStringOption("quiet")
        addStringOption("hdf", "project.name ${project.name}")
        addStringOption("stubs", "${project.docsDir}/stubs")
        addStringOption("apixml", "${project.docsDir}/apidocs/api.xml")
        addStringOption("stubs", "${project.docsDir}/apidocs")
        addStringOption("templatedir", "${rootDir}/src/javadoc")
    }
}

task getVersion << {
    println version
}

javadoc.dependsOn 'generateDoclava'

apply from: 'gradle/idea.gradle'