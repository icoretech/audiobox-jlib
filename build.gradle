apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'com.github.ben-manes.versions'

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.13.0'
    }
}

repositories {
    mavenCentral()
}

if (hasProperty('nexusUsername')) {
    apply from: 'gradle/publish.gradle'
}

apply from: 'gradle/jacoco.gradle'

defaultTasks 'build'

compileJava {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

configurations {
    jaxDoclet
    compile
    runtime
}

dependencies {
    // Logging
    compile     'org.slf4j:slf4j-api:1.7.21'

    // Configuration
    compile     'com.typesafe:config:1.3.0'

    // Http
    compile     'com.google.http-client:google-http-client:1.22.0'
    compile     'com.google.oauth-client:google-oauth-client:1.22.0'

    // Common utils
    compile     'commons-validator:commons-validator:1.5.1'
    compile     'org.apache.commons:commons-lang3:3.4'
    compile     'de.danielbechler:java-object-diff:0.94'


    // Testing
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.1.0-RC.1'
    testCompile 'com.google.http-client:google-http-client-jackson2:1.22.0'

    // Test logging
    testCompile 'ch.qos.logback:logback-classic:1.1.7'
    testCompile 'org.slf4j:jul-to-slf4j:1.7.21'

    // Cache
    testCompile  'com.integralblue:httpresponsecache:1.3'

    // Utils
    testCompile  'org.apache.commons:commons-io:1.3.2'
    testCompile  'nl.jqno.equalsverifier:equalsverifier:2.1.5'

    // JavaDoc
    jaxDoclet("com.google.doclava:doclava:1.0.6")
}

test {
    testLogging {
        exceptionFormat = 'full'
    }
}

task generateDoclava(type: Javadoc) {

    description = "Build the Doclava Javadocs"
    source = sourceSets.main.allJava
    options.docletpath = configurations.jaxDoclet.files.asType(List)
    maxMemory = "1024m"
    classpath = configurations.compile
    destinationDir = file("${project.docsDir}/apidocs")
    title = ""

    options {
        doclet = "com.google.doclava.Doclava"
        classpath new File(System.getenv('JAVA_HOME') + "/jre/lib/rt.jar")

        addStringOption("quiet")
        addStringOption("hdf", "project.name ${project.name}")
        addStringOption("stubs", "${project.docsDir}/stubs")
        addStringOption("apixml", "${project.docsDir}/apidocs/api.xml")
        addStringOption("stubs", "${project.docsDir}/apidocs")
        addStringOption("templatedir", "${rootDir}/src/javadoc")
    }
}

task getVersion << {
    println version
}

javadoc.dependsOn 'generateDoclava'

apply from: 'gradle/idea.gradle'