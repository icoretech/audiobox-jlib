apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'jacoco'
apply plugin: 'git-dependencies'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.batcha.gradle.plugins:git-dependencies:0.1'
    }
}

jacoco {
    toolVersion = "0.6.5.201403032054"
}

jacocoTestReport {
    group = "reporting"
    description = "Generate Jacoco coverage reports after running tests."
    additionalSourceDirs = files(sourceSets.main.allJava.srcDirs)
    reports {
        xml.enabled true
        html.enabled true
        csv.enabled false
        html.destination "${buildDir}/jacocoHtml"
    }
}

compileJava {
    sourceCompatibility = 1.7
    targetCompatibility = 1.7
}

configurations {
    jaxDoclet
}



sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

group = 'fm.audiobox'
version = '1.0-SNAPSHOT'

idea {

    module {

        //if you love browsing Javadoc
        downloadJavadoc = true

        //and hate reading sources :)
        downloadSources = true
    }

    project {
        jdkName = '1.7'

        languageLevel = '1.7'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Logging
    compile     'org.slf4j:slf4j-api:1.7.+'

    // Configuration
    compile     group: 'com.typesafe', name: 'config', version: '1.2.+'

    // Http
    compile     'com.google.http-client:google-http-client:1.17.0-rc'
    //compile     'com.google.oauth-client:google-oauth-client:1.17.0-rc'
    compile('com.google.oauth-client:google-oauth-client:1.18.0-rc-SNAPSHOT').ext.git = 'git@github.com:Keytwo/google-oauth-java-client.git'

    // Common utils
    compile     'commons-validator:commons-validator:+'
    compile     'org.apache.commons:commons-lang3:+'

    // Testing
    testCompile 'junit:junit:4.11+'
    testCompile 'org.mockito:mockito-core:1.9.5'
    testCompile 'com.google.http-client:google-http-client-jackson2:+'

    // Test logging
    testCompile 'ch.qos.logback:logback-classic:1.+'
    testCompile 'org.slf4j:jul-to-slf4j:1.7.+'

    // Cache
    testCompile  'com.integralblue:httpresponsecache:1.3+'

    // Utils
    testCompile  'org.apache.commons:commons-io:1.3+'


    // JavaDoc
    jaxDoclet("com.google.doclava:doclava:1.0.6")
}

task generateDoclava(type: Javadoc) {

    description = "Build the Doclava Javadocs"
    source = sourceSets.main.allJava
    options.docletpath = configurations.jaxDoclet.files.asType(List)
    maxMemory = "1024m"
    classpath = configurations.compile
    destinationDir = file("${project.docsDir}/apidocs")


    title = ""

    options {
        doclet = "com.google.doclava.Doclava"
        bootClasspath new File(System.getenv('JAVA_HOME') + "/jre/lib/rt.jar")

        addStringOption("quiet")
        addStringOption("hdf", "project.name ${project.name}")
        addStringOption("stubs", "${project.docsDir}/stubs")
        addStringOption("apixml", "${project.docsDir}/apidocs/api.xml")
        addStringOption("stubs", "${project.docsDir}/apidocs")
    }
}
