package org.slf4j;
public interface Logger
{
public abstract  java.lang.String getName();
public abstract  boolean isTraceEnabled();
public abstract  void trace(java.lang.String arg0);
public abstract  void trace(java.lang.String arg0, java.lang.Object arg1);
public abstract  void trace(java.lang.String arg0, java.lang.Object arg1, java.lang.Object arg2);
public abstract  void trace(java.lang.String arg0, java.lang.Object... arg1);
public abstract  void trace(java.lang.String arg0, java.lang.Throwable arg1);
public abstract  boolean isTraceEnabled(org.slf4j.Marker arg0);
public abstract  void trace(org.slf4j.Marker arg0, java.lang.String arg1);
public abstract  void trace(org.slf4j.Marker arg0, java.lang.String arg1, java.lang.Object arg2);
public abstract  void trace(org.slf4j.Marker arg0, java.lang.String arg1, java.lang.Object arg2, java.lang.Object arg3);
public abstract  void trace(org.slf4j.Marker arg0, java.lang.String arg1, java.lang.Object... arg2);
public abstract  void trace(org.slf4j.Marker arg0, java.lang.String arg1, java.lang.Throwable arg2);
public abstract  boolean isDebugEnabled();
public abstract  void debug(java.lang.String arg0);
public abstract  void debug(java.lang.String arg0, java.lang.Object arg1);
public abstract  void debug(java.lang.String arg0, java.lang.Object arg1, java.lang.Object arg2);
public abstract  void debug(java.lang.String arg0, java.lang.Object... arg1);
public abstract  void debug(java.lang.String arg0, java.lang.Throwable arg1);
public abstract  boolean isDebugEnabled(org.slf4j.Marker arg0);
public abstract  void debug(org.slf4j.Marker arg0, java.lang.String arg1);
public abstract  void debug(org.slf4j.Marker arg0, java.lang.String arg1, java.lang.Object arg2);
public abstract  void debug(org.slf4j.Marker arg0, java.lang.String arg1, java.lang.Object arg2, java.lang.Object arg3);
public abstract  void debug(org.slf4j.Marker arg0, java.lang.String arg1, java.lang.Object... arg2);
public abstract  void debug(org.slf4j.Marker arg0, java.lang.String arg1, java.lang.Throwable arg2);
public abstract  boolean isInfoEnabled();
public abstract  void info(java.lang.String arg0);
public abstract  void info(java.lang.String arg0, java.lang.Object arg1);
public abstract  void info(java.lang.String arg0, java.lang.Object arg1, java.lang.Object arg2);
public abstract  void info(java.lang.String arg0, java.lang.Object... arg1);
public abstract  void info(java.lang.String arg0, java.lang.Throwable arg1);
public abstract  boolean isInfoEnabled(org.slf4j.Marker arg0);
public abstract  void info(org.slf4j.Marker arg0, java.lang.String arg1);
public abstract  void info(org.slf4j.Marker arg0, java.lang.String arg1, java.lang.Object arg2);
public abstract  void info(org.slf4j.Marker arg0, java.lang.String arg1, java.lang.Object arg2, java.lang.Object arg3);
public abstract  void info(org.slf4j.Marker arg0, java.lang.String arg1, java.lang.Object... arg2);
public abstract  void info(org.slf4j.Marker arg0, java.lang.String arg1, java.lang.Throwable arg2);
public abstract  boolean isWarnEnabled();
public abstract  void warn(java.lang.String arg0);
public abstract  void warn(java.lang.String arg0, java.lang.Object arg1);
public abstract  void warn(java.lang.String arg0, java.lang.Object... arg1);
public abstract  void warn(java.lang.String arg0, java.lang.Object arg1, java.lang.Object arg2);
public abstract  void warn(java.lang.String arg0, java.lang.Throwable arg1);
public abstract  boolean isWarnEnabled(org.slf4j.Marker arg0);
public abstract  void warn(org.slf4j.Marker arg0, java.lang.String arg1);
public abstract  void warn(org.slf4j.Marker arg0, java.lang.String arg1, java.lang.Object arg2);
public abstract  void warn(org.slf4j.Marker arg0, java.lang.String arg1, java.lang.Object arg2, java.lang.Object arg3);
public abstract  void warn(org.slf4j.Marker arg0, java.lang.String arg1, java.lang.Object... arg2);
public abstract  void warn(org.slf4j.Marker arg0, java.lang.String arg1, java.lang.Throwable arg2);
public abstract  boolean isErrorEnabled();
public abstract  void error(java.lang.String arg0);
public abstract  void error(java.lang.String arg0, java.lang.Object arg1);
public abstract  void error(java.lang.String arg0, java.lang.Object arg1, java.lang.Object arg2);
public abstract  void error(java.lang.String arg0, java.lang.Object... arg1);
public abstract  void error(java.lang.String arg0, java.lang.Throwable arg1);
public abstract  boolean isErrorEnabled(org.slf4j.Marker arg0);
public abstract  void error(org.slf4j.Marker arg0, java.lang.String arg1);
public abstract  void error(org.slf4j.Marker arg0, java.lang.String arg1, java.lang.Object arg2);
public abstract  void error(org.slf4j.Marker arg0, java.lang.String arg1, java.lang.Object arg2, java.lang.Object arg3);
public abstract  void error(org.slf4j.Marker arg0, java.lang.String arg1, java.lang.Object... arg2);
public abstract  void error(org.slf4j.Marker arg0, java.lang.String arg1, java.lang.Throwable arg2);
public static final java.lang.String ROOT_LOGGER_NAME = "ROOT";
}
